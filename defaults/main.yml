---
# Copyright (C) 2020 Reto Gantenbein <reto.gantenbein@linuxmonk.ch>
# SPDX-License-Identifier: Apache-2.0

#
# COPR Repository Configuration
#

# COPR repository name (e.g. ganto/jo)
copr_reposync_name: ''

# COPR repository URL
copr_reposync_url: 'https://copr-be.cloud.fedoraproject.org/results/{{ copr_reposync_name }}'

# List of <distribution>-<release>-<arch> repository triplets that will be
# synchronized. Example: 'epel-8-x86_64'. Ensure the listed repositories are
# actually enabled in the COPR configuration.
#
# By default this variable will be generated from:
# `copr_reposync_distributions`, `copr_reposync_releases` and
# `copr_reposync_archs`
copr_reposync_repos: '{{ lookup("template", "lookup/repos.j2", convert_data=false) | from_yaml }}'

# List of distribution used for generating the list of repositories to
# be mirrored. Must contain distributions for which builds are enabled in the
# COPR configuration, e.g. `fedora`, `epel`, `mageia`
copr_reposync_distributions:
  - fedora
  - epel

# Dictionary of distributions with their package repository releases used for
# generating the list of repositories to be mirrored. Must contain releases for
# which builds are enabled in the COPR configuration.
copr_reposync_releases:
  fedora:
    - 34
    - 35
  epel:
    - 7
    - 8

# Dictionary of distributions with their supported architectures used for
# generating the list of repositories to be mirrored. Must contain architectures
# for which builds are enabled in the COPR configuration.
copr_reposync_archs:
  fedora:
    - x86_64
  epel:
    - x86_64


#
# Local mirror configuration
#

# Base directory for COPR reposync mirrors
copr_reposync_path: /var/www/html

# Local directory for storing the individual distribution repositories.
copr_reposync_repo_path: '{{ copr_reposync_path }}/{{ copr_reposync_name }}'

# Account name owning the mirror directory and synchronization jobs. If the
# account doesn't exist yet, it will be created.
copr_reposync_owner: reposync

# List of packages to be installed
copr_reposync_packages:
  - dnf-utils
  - createrepo_c

# Service name for reposync systemd units
copr_reposync_service_name: reposync

# systemd [Unit] directives for the reposync service unit
copr_reposync_service_unit_config:
  'StartLimitBurst': 5
  'StartLimitIntervalSec': '120s'

# systemd [Service] directives for the reposync service unit
copr_reposync_service_config:
  'Nice': 19

# Each role execution will trigger the synchronization of the package repository
# mirrors. By default the package repositories are only synchronized on
# configuration change or via systemd timer.
copr_reposync_exec_sync: False

# Create and enable a systemd timer to schedule the package repository
# synchronization.
copr_reposync_timer: True

# Configuration for systemd timer. By default it will synchronize every 6 hours
# within a 3 hour random delay window.
#
# For more information see `man 5 systemd.timer`.
copr_reposync_timer_config:
  'OnCalendar': '*-*-* 0,6,12,18:0:0'
  'RandomizedDelaySec': '10800s'


#
# Local package repository configuration
#

# Generate repo file for COPR mirror
copr_reposync_repofile: True

# Repository URL prefix used in the repo files
copr_reposync_repofile_url: http://localhost/

# Download and store GPG public key for verifying the packages. This will also
# enable GPG package validation in the repo file.
copr_reposync_gpg: True

# URL to the repository GPG public key
copr_reposync_gpg_url: '{{ copr_reposync_url }}/pubkey.gpg'


#
# Repository cleanup configuration
#

# List of <distribution>-<release>-<arch> repository triplets for which the
# local mirror synchronization with COPR will be removed.
# Example: 'epel-6-i386'
#
# IMPORTANT: If this variable is non-empty the Ansible role execution might be
#            destructive!
copr_reposync_remove_repos: []

# Delete local mirror content when removing the repositories listed in
# `copr_reposync_remove_repos`.
copr_reposync_cleanup_content: True
