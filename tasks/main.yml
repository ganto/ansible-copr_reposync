---
# Copyright (C) 2020 Reto Gantenbein <reto.gantenbein@linuxmonk.ch>
# SPDX-License-Identifier: Apache-2.0

- name: "Verify repository list for COPR '{{ copr_reposync_name }}'"
  ansible.builtin.assert:
    fail_msg: 'No repositories found to synchronize. Verify your distribution, release and architecture definitions.'
    success_msg:
      - '{{ ("Setup repository sync for: " + (copr_reposync_repos | join(", ")))
            if (copr_reposync_repos | length > 0) else "No repositories found to setup synchronization" }}'
      - '{{ ("Remove repository sync for: " + (copr_reposync_remove_repos | join(", ")))
            if (copr_reposync_remove_repos | length > 0) else "No repositories found to remove synchronization" }}'
    that: (copr_reposync_repos | length > 0) or
          (copr_reposync_remove_repos | length > 0)

- name: Install required packages
  ansible.builtin.package:
    name: "{{ copr_reposync_packages }}"
    state: present

- name: Reposync user account
  ansible.builtin.user:
    name: "{{ copr_reposync_owner }}"
    home: "{{ copr_reposync_path.rstrip('/') }}"
    system: yes
    shell: /sbin/nologin

- name: Local path to store reposync mirrors
  ansible.builtin.file:
    path: '{{ copr_reposync_path }}'
    state: directory
    mode: '0755'

- name: Repository directory and permissions
  ansible.builtin.file:
    path: '{{ copr_reposync_repo_path }}'
    state: directory
    mode: '0755'
    owner: '{{ copr_reposync_owner }}'
    group: '{{ copr_reposync_owner }}'

- name: Reposync systemd service unit
  ansible.builtin.template:
    src: reposync@.service.j2
    dest: /etc/systemd/system/reposync@.service
    mode: '0644'
    owner: root
    group: root

- name: Reposync systemd timer unit
  ansible.builtin.template:
    src: reposync@.timer.j2
    dest: /etc/systemd/system/reposync@.timer
    mode: '0644'
    owner: root
    group: root
  when: copr_reposync_timer | bool

- name: Include tasks for repository mirror setup
  ansible.builtin.include_tasks: reposync_service.yml
  loop: '{{ copr_reposync_repos | difference(copr_reposync_remove_repos) | list }}'
  loop_control:
    loop_var: copr_reposync_include_repo

- name: Include tasks for repository mirror removal
  ansible.builtin.include_tasks: reposync_removal.yml
  loop: '{{ copr_reposync_remove_repos | list }}'
  loop_control:
    loop_var: copr_reposync_include_repo

- name: Download COPR repository GPG public key
  ignore_errors: '{{ ansible_check_mode }}'
  ansible.builtin.get_url:
    url: '{{ copr_reposync_gpg_url }}'
    dest: '{{ copr_reposync_repo_path }}/'
    owner: '{{ copr_reposync_owner }}'
    mode: '0644'
  when:
    - copr_reposync_gpg | bool
    - copr_reposync_repos | difference(copr_reposync_remove_repos) | list | length > 0

- name: Generate repo files for COPR mirror repositories
  ansible.builtin.template:
    src: mirror.repo.j2
    dest: '{{ copr_reposync_repo_path }}/{{ copr_reposync_name | replace("/", "-") }}-{{ item }}.repo'
    owner: '{{ copr_reposync_owner }}'
    mode: '0644'
  when:
    - copr_reposync_repofile | bool
    - copr_reposync_repos | difference(copr_reposync_remove_repos) | list | length > 0
  # get list of unique distributions from `copr_reposync_repos`
  loop: '{{ lookup("template", "lookup/distributions.j2", convert_data=false) | from_yaml }}'
  loop_control:
    label: '{{ copr_reposync_repo_path }}/{{ copr_reposync_name | replace("/", "-") }}-{{ item }}.repo'
